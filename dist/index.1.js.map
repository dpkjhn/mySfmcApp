{"version":3,"sources":["../src/index.1.js"],"names":["sfmcEnv","authEndpoint","clientId","clientSecret","soapUsername","soapPassword","tokenId","sfmcapp","deItems","items","Id","FirstName","EmailAddress","records","keys","values","createDirTeee","dirPath","currDir","stats","lstatSync","filename","basename","fileInfo","path","dirname","name","isDirectory","type","children","readdirSync","map","subDir","join","extname","substr","processDir","dirTree","rootCategory","parentId","forEach","file","categoryName","concat","createCBFolder","then","console","log","catch","err","error","message","insertCBAsset","run","authenticate","a","getCBAsset","JSON","stringify","cbCategory"],"mappings":"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","file":"index.1.js","sourcesContent":["'use strict';\n\nimport rfs from 'recursive-readdir';\nimport fs from 'fs';\nimport path from 'path';\nimport SfmcApp from './modules/sfmcapp';\n\nconst sfmcEnv = {\n    authEndpoint: 'http://auth.exacttargetapis.com',\n    clientId: 'a9xvz6zo3wqa9itrirnn2a15',\n    clientSecret: 'CpQNDK2QZK1xjPAOlBwSnl8S',\n    soapUsername: null,\n    soapPassword: null,\n    tokenId: null\n};\n\nconst sfmcapp = new SfmcApp(sfmcEnv.clientId, sfmcEnv.clientSecret);\n\nvar deItems = {\n    items: [{\n            Id: '123',\n            FirstName: 'Bobby',\n            EmailAddress: 'ctravers2016@gmail.com'\n        },\n        {\n            Id: '456',\n            FirstName: 'Sam',\n            EmailAddress: 'ctravers2016@gmail.com'\n        }\n    ]\n};\n\nlet records = [{\n        keys: {\n            Id: 'aaa'\n        },\n        values: {\n            FirstName: 'Bobby',\n            EmailAddress: 'ctravers2016@gmail.com'\n        }\n    },\n    {\n        keys: {\n            Id: 'bbb'\n        },\n        values: {\n            FirstName: 'Sam',\n            EmailAddress: 'ctravers2016@gmail.com'\n        }\n    }\n];\n\nlet createDirTeee = (dirPath, currDir = '') => {\n    let stats = fs.lstatSync(dirPath),\n        filename = path.basename(dirPath),\n        fileInfo = {\n            path: path.dirname(dirPath), //currDir.concat('/', filename),\n            name: filename\n        };\n\n    if (stats.isDirectory()) {\n        fileInfo.type = 'folder';\n        fileInfo.children = fs.readdirSync(dirPath).map(function(subDir) {\n            return createDirTeee(path.join(dirPath, subDir), filename);\n        });\n    } else {\n        fileInfo.type = path.extname(filename).substr(1);\n    }\n\n    return fileInfo;\n};\n\nlet processDir = async(dirTree, rootCategory = '', parentId = 0) => {\n    // let subFolders = folder => {\n    //     return folder.children.filter(item => {\n    //         return item.type === 'folder';\n    //     });\n    // };\n\n    // let filterBy = (items, type) => {\n    //     return items.children.filter(item => {\n    //         return item.type === type;\n    //     });\n    // };\n\n    dirTree.forEach(file => {\n        let categoryName = rootCategory.concat('/', file.name);\n\n        if (file.type === 'folder') {\n            sfmcapp\n                .createCBFolder(categoryName, parentId)\n                .then(parentId => {\n                    if (file.children) {\n                        console.log('-- processing children');\n                        return processDir(file.children, categoryName, parentId);\n                        // return processDir(file.children, folderName, 0);\n                    }\n                })\n                .catch(err => {\n                    console.log('Uhoh! ' + err.error.message);\n                });\n        } else if (file.type === 'jpg') {\n            console.log('inserting image: ' + categoryName);\n            sfmcapp.insertCBAsset(\n                path.join(file.path, file.name),\n                path.basename(file.name),\n                parentId\n            );\n        } else if (file.type === 'html') {\n            console.log('inserting content block: ' + categoryName);\n        }\n    });\n\n    // dirTree.children.forEach(file => {\n    //     if (file.type === 'folder') {\n    //         return processDir(file, `${rootCategory}/${file.name}`, parentId);\n    //     } else if (file.type === 'jpg') {\n    //         // return;\n    //         sfmcapp.insertCBAsset(\n    //             path.join(file.path, file.name),\n    //             path.basename(file.name),\n    //             rootCategory\n    //         );\n    //     }\n    // });\n};\n\nasync function run() {\n    const dirPath =\n        '/Users/djohn/Google Drive/dpk-work/learns/javascript/mySfmcApp/testdir';\n    await sfmcapp.authenticate('4L8ZIuXftV3dDiCUUwNJND21');\n\n    let a = await sfmcapp.getCBAsset('?$filter=parentId eq 0');\n\n    console.log(JSON.stringify(a, null, 2));\n\n    let cbCategory = 'Content Builder/PwC';\n    let dirTree = createDirTeee(dirPath);\n\n    // console.log(JSON.stringify(dirTree, null, 2));\n    // return;\n\n    // let parentId = 397998; // await sfmcapp.createCBFolder(cbCategory);\n\n    // if (!parentId)  return;\n    // try {\n    //     processDir(dirTree.children, cbCategory, parentId);\n    // } catch (err) {\n    //     console.log(err);\n    // }\n}\n\nrun();\n\n// const path = `${__dirname}/../img/kitten.jpg`;\n// // console.log(path);\n\n// const html =\n//     '<div data-marker=\"wrapper\" style=\"border-top: 1px solid #E4E4E4;border-right: 1px solid #E4E4E4;border-bottom: 1px solid #E4E4E4;border-left: 1px solid #E4E4E4;margin-top: 0px;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;;padding-top: 0px; ;padding-right: 0px;padding-bottom: 0px;padding-left: 0px;\" class=\"stylingblock-content-wrapper\"><!-- Start Smart Block --><style type=\"text/css\">\\n.amp {font-size:1px;color:#fff;}</style><span class=\"amp\">%%[</span><style type=\"text/css\">\\n.code_none{display:none;}</style><div align=\"center\" style=\"padding:20px; border: 3px dashed white;background-color:#ffffff\">\\n\\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"300\">\\n\\t\\t\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<td height=\"99\" width=\"99\">\\n\\t\\t\\t\\t\\t<img height=\"99\" src=\"http://image.s4.exct.net/lib/fe9a15747561077e70/m/1/60d5f571-3088-4a4c-81eb-fb611cc41a9b.gif\" width=\"139\" /></td><td width=\"20\">\\n\\t\\t\\t\\t\\t&nbsp;</td><td style=\"font-family:Arial, Helvetica, sans-serif; color:#000000; font-size:16px;\">\\n\\t\\t\\t\\t\\t<span style=\"font-size:24px;\">Your venue</span></td></tr></table></div> <span class=\"amp\">]%%</span> <!-- End Smart Block --><div class=\"code_none\">\\n\\t<!-- Start Code -->Your venue<br>\\n\\t<img alt=\"Google Map of EC2N\" src=\"http://maps.googleapis.com/maps/api/staticmap?center=%%Venue Postal Code%%&amp;zoom=16&amp;scale=false&amp;size=600x300&amp;maptype=roadmap&amp;format=jpg&amp;visual_refresh=true&amp;markers=size:mid%7Ccolor:0xff0000%7Clabel:1%7C%%Venue Postal Code%%\" width=\"600\"></div></div>';\n\n// let response = await sfmcapp.insertCBContentBlock(\n//     'location block',\n//     630043,\n//     html\n// );\n\n// console.log(response);\n// sfmcapp.createCBFolder('1. Images', '630043');\n// sfmcapp.createCBFolder('2. Content Blocks', '630043');\n// sfmcapp.createCBFolder('3. Email Templates', '630043');\n// sfmcapp.createCBFolder('4. Emails', '630043');\n\n// let details = await sfmcapp.getCBAsset(630043);\n// console.log(details);"]}