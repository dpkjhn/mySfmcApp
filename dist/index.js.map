{"version":3,"sources":["../src/index.js"],"names":["sfmcEnv","authEndpoint","clientId","clientSecret","soapUsername","soapPassword","tokenId","middlewares","urlencoded","extended","app","sfmcapp","set","join","__dirname","use","get","req","res","render","post","data","body","errors","message","msg","email","console","log","listen","createDirTeee","dirPath","currDir","stats","lstatSync","filename","basename","fileInfo","path","dirname","name","isDirectory","type","children","readdirSync","map","subDir","extname","substr","processDir","dirTree","rootCategory","parentId","forEach","file","categoryName","concat","createCBFolder","then","catch","err","error","insertCBAsset","run","authenticate","a","getCBAsset","JSON","stringify","cbCategory"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport express from 'express';\nimport helmet from 'helmet';\nimport bodyParser from 'body-parser';\nimport SfmcApp from './modules/sfmcapp';\n\nconst sfmcEnv = {\n    authEndpoint: 'http://auth.exacttargetapis.com',\n    clientId: 'a9xvz6zo3wqa9itrirnn2a15',\n    clientSecret: 'CpQNDK2QZK1xjPAOlBwSnl8S',\n    soapUsername: null,\n    soapPassword: null,\n    tokenId: null\n};\n\nconst middlewares = [bodyParser.urlencoded({ extended: true }), helmet()];\n\nconst app = express();\nconst sfmcapp = new SfmcApp(sfmcEnv.clientId, sfmcEnv.clientSecret);\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.use(middlewares);\n\napp.get('/', (req, res) => {\n    res.render('index');\n});\n\napp.post('/', (req, res) => {\n    res.render('index', {\n        data: req.body, // { message, email }\n        errors: {\n            message: {\n                msg: 'A message is required'\n            },\n            email: {\n                msg: 'That email doesnâ€˜t look right'\n            }\n        }\n    });\n\n    console.log(req.body);\n});\n\napp.listen(3000, () => {\n    console.log('listening');\n});\n\nlet createDirTeee = (dirPath, currDir = '') => {\n    let stats = fs.lstatSync(dirPath),\n        filename = path.basename(dirPath),\n        fileInfo = {\n            path: path.dirname(dirPath), //currDir.concat('/', filename),\n            name: filename\n        };\n\n    if (stats.isDirectory()) {\n        fileInfo.type = 'folder';\n        fileInfo.children = fs.readdirSync(dirPath).map(function(subDir) {\n            return createDirTeee(path.join(dirPath, subDir), filename);\n        });\n    } else {\n        fileInfo.type = path.extname(filename).substr(1);\n    }\n\n    return fileInfo;\n};\n\nlet processDir = async(dirTree, rootCategory = '', parentId = 0) => {\n    dirTree.forEach(file => {\n        let categoryName = rootCategory.concat('/', file.name);\n\n        if (file.type === 'folder') {\n            sfmcapp\n                .createCBFolder(categoryName, parentId)\n                .then(parentId => {\n                    if (file.children) {\n                        console.log('-- processing children');\n                        return processDir(file.children, categoryName, parentId);\n                        // return processDir(file.children, folderName, 0);\n                    }\n                })\n                .catch(err => {\n                    console.log('Uhoh! ' + err.error.message);\n                });\n        } else if (file.type === 'jpg') {\n            console.log('inserting image: ' + categoryName);\n            sfmcapp.insertCBAsset(\n                path.join(file.path, file.name),\n                path.basename(file.name),\n                parentId\n            );\n        } else if (file.type === 'html') {\n            console.log('inserting content block: ' + categoryName);\n        }\n    });\n};\n\nasync function run() {\n    const dirPath =\n        '/Users/djohn/Google Drive/dpk-work/learns/javascript/mySfmcApp/testdir';\n    await sfmcapp.authenticate('4L8ZIuXftV3dDiCUUwNJND21');\n\n    let a = await sfmcapp.getCBAsset('?$filter=parentId eq 0');\n\n    console.log(JSON.stringify(a, null, 2));\n\n    let cbCategory = 'Content Builder/PwC';\n    let dirTree = createDirTeee(dirPath);\n}\n\n// run();"]}